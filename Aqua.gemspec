# Generated by jeweler
# DO NOT EDIT THIS FILE
# Instead, edit Jeweler::Tasks in Rakefile, and run `rake gemspec`
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{aqua}
  s.version = "0.1.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Kane Baccigalupi"]
  s.date = %q{2009-08-21}
  s.description = %q{Even with ORMs like ActiveRecord, DataMapper which ease the pain of relational data storage, considerable developer effort goes into wrangling Ruby objects into their databases. Document-oriented databases have made it possible to store nested data structures that easily map to Ruby objects. Aqua (http://github.com/baccigalupi/aqua) is a new Ruby library that aims to painlessly persists objects, allowing developers to focus more on object oriented code and less on storage. Currently Aqua is in pre-alpha testing, with the following big things left to implement: A data query DSL and implementation; Support of all objects in the Standard Library; Class and code storage to allow the sharing and persistence of classes with their data.}
  s.email = %q{baccigalupi@gmail.com}
  s.extra_rdoc_files = [
    "LICENSE",
     "README.rdoc"
  ]
  s.files = [
    ".document",
     ".gitignore",
     ".yardoc",
     "Aqua.gemspec",
     "LICENCE_COUCHREST",
     "LICENSE",
     "README.rdoc",
     "Rakefile",
     "VERSION",
     "doc/Aqua.html",
     "doc/Aqua/Config.html",
     "doc/Aqua/Config/ClassMethods.html",
     "doc/Aqua/ObjectNotFound.html",
     "doc/Aqua/Pack.html",
     "doc/Aqua/Pack/ClassMethods.html",
     "doc/Aqua/Pack/InstanceMethods.html",
     "doc/Aqua/Query.html",
     "doc/Aqua/Query/ClassMethods.html",
     "doc/Aqua/Query/InstanceMethods.html",
     "doc/Aqua/Storage.html",
     "doc/Aqua/Store.html",
     "doc/Aqua/Store/CouchDB.html",
     "doc/Aqua/Store/CouchDB/Conflict.html",
     "doc/Aqua/Store/CouchDB/Database.html",
     "doc/Aqua/Store/CouchDB/RequestFailed.html",
     "doc/Aqua/Store/CouchDB/RequestTimeout.html",
     "doc/Aqua/Store/CouchDB/ResourceNotFound.html",
     "doc/Aqua/Store/CouchDB/Server.html",
     "doc/Aqua/Store/CouchDB/ServerBrokeConnection.html",
     "doc/Aqua/Store/CouchDB/StorageMethods.html",
     "doc/Aqua/Store/CouchDB/StorageMethods/ClassMethods.html",
     "doc/Aqua/Store/CouchDB/StorageMethods/InstanceMethods.html",
     "doc/Aqua/Tank.html",
     "doc/Aqua/Unpack.html",
     "doc/Aqua/Unpack/ClassMethods.html",
     "doc/Aqua/Unpack/InstanceMethods.html",
     "doc/README.rdoc.html",
     "doc/RestAPI.html",
     "doc/RestClientAdapter.html",
     "doc/all-files.html",
     "doc/all-methods.html",
     "doc/all-namespaces.html",
     "doc/app.js",
     "doc/custom.css",
     "doc/index.html",
     "doc/jquery.js",
     "doc/style.css",
     "doc/syntax_highlight.css",
     "doc/top-level-namespace.html",
     "lib/aqua.rb",
     "lib/aqua/object/config.rb",
     "lib/aqua/object/extensions/ar_convert.rb",
     "lib/aqua/object/extensions/ar_style.rb",
     "lib/aqua/object/extensions/property.rb",
     "lib/aqua/object/extensions/validation.rb",
     "lib/aqua/object/pack.rb",
     "lib/aqua/object/query.rb",
     "lib/aqua/object/tank.rb",
     "lib/aqua/object/unpack.rb",
     "lib/aqua/store/couch_db/couch_db.rb",
     "lib/aqua/store/couch_db/database.rb",
     "lib/aqua/store/couch_db/http_client/adapter/rest_client.rb",
     "lib/aqua/store/couch_db/http_client/rest_api.rb",
     "lib/aqua/store/couch_db/server.rb",
     "lib/aqua/store/couch_db/storage_methods.rb",
     "lib/aqua/store/storage.rb",
     "lib/aqua/support/mash.rb",
     "lib/aqua/support/string_extensions.rb",
     "spec/aqua_spec.rb",
     "spec/object/config_spec.rb",
     "spec/object/object_fixtures/array_udder.rb",
     "spec/object/object_fixtures/canned_hash.rb",
     "spec/object/object_fixtures/grounded.rb",
     "spec/object/object_fixtures/log.rb",
     "spec/object/object_fixtures/persistent.rb",
     "spec/object/object_fixtures/user.rb",
     "spec/object/pack_spec.rb",
     "spec/object/query_spec.rb",
     "spec/object/tank_spec.rb",
     "spec/object/unpack_spec.rb",
     "spec/spec.opts",
     "spec/spec_helper.rb",
     "spec/store/couchdb/couch_db_spec.rb",
     "spec/store/couchdb/database_spec.rb",
     "spec/store/couchdb/document_fixture.rb",
     "spec/store/couchdb/server_spec.rb",
     "spec/store/couchdb/storage_methods_spec.rb",
     "utils/code_statistics.rb",
     "utils/console"
  ]
  s.has_rdoc = true
  s.homepage = %q{http://github.com/baccigalupi/aqua}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.1}
  s.summary = %q{Aqua: A Ruby Object Database ... just add water (and CouchDB)}
  s.test_files = [
    "spec/aqua_spec.rb",
     "spec/object/config_spec.rb",
     "spec/object/object_fixtures/array_udder.rb",
     "spec/object/object_fixtures/canned_hash.rb",
     "spec/object/object_fixtures/grounded.rb",
     "spec/object/object_fixtures/log.rb",
     "spec/object/object_fixtures/persistent.rb",
     "spec/object/object_fixtures/user.rb",
     "spec/object/pack_spec.rb",
     "spec/object/query_spec.rb",
     "spec/object/tank_spec.rb",
     "spec/object/unpack_spec.rb",
     "spec/spec_helper.rb",
     "spec/store/couchdb/couch_db_spec.rb",
     "spec/store/couchdb/database_spec.rb",
     "spec/store/couchdb/document_fixture.rb",
     "spec/store/couchdb/server_spec.rb",
     "spec/store/couchdb/storage_methods_spec.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 2

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end
